import { test } from 'uvu';
import { equal } from 'uvu/assert';
import parse, { TokenType, TokenFormat } from '../src/parser';

test('parse basic emoji', () => {
    equal(parse('a‚úäb'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: 'a‚úäb',
        emoji: [{ from: 1, to: 2 }]
    }]);

    equal(parse('a‚úäba‚úäba‚úäb'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: 'a‚úäba‚úäba‚úäb',
        emoji: [
            { from: 1, to: 2 },
            { from: 4, to: 5 },
            { from: 7, to: 8 }
        ]
    }]);

    equal(parse('üòÉ‚úäüòÉ'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: 'üòÉ‚úäüòÉ',
        emoji: [
            { from: 0, to: 2 },
            { from: 2, to: 3 },
            { from: 3, to: 5 }
        ]
    }]);

    // keycap-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    equal(parse('12Ô∏è‚É£'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: '12Ô∏è‚É£',
        emoji: [{ from: 1, to: 4 }]
    }]);

    // —ç–º–æ–¥–∂–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ç–æ–Ω–∞ –∫–æ–∂–∏
    equal(parse('üëçüèΩ üßíüèº'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: 'üëçüèΩ üßíüèº',
        emoji: [
            { from: 0, to: 4 },
            { from: 5, to: 9 }
        ]
    }]);

    // –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–º–æ–¥–∂–∏
    equal(parse('üë©üèºüë©üèº‚Äçü¶∞ü§¶üèº‚Äç‚ôÄÔ∏è'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: 'üë©üèºüë©üèº‚Äçü¶∞ü§¶üèº‚Äç‚ôÄÔ∏è',
        emoji: [
            { from: 0, to: 4 },
            { from: 4, to: 11 },
            { from: 11, to: 18 }
        ]
    }]);
});

test('parse text smileys', () => {
    equal(parse(':)'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: ':)',
        emoji: [{ from: 0, to: 2, emoji: 'üôÇ' }]
    }]);

    equal(parse(':))))'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: ':))))',
        emoji: [{ from: 0, to: 2, emoji: 'üôÇ' }]
    }]);

    // –Ω–µ –ø–∞—Ä—Å–∏–º —Å–º–∞–π–ª–∏–∫, –µ—Å–ª–∏ –Ω–µ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ —Å–ª–æ–≤–∞
    equal(parse('a:)'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: 'a:)'
    }]);

    equal(parse(':)a'), [{
        type: TokenType.Text,
        format: TokenFormat.None,
        value: ':)a'
    }]);
});

test.run();